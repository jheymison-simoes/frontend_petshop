[{"E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\index.tsx":"1","E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\App.tsx":"2","E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\routes.tsx":"3","E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\pages\\ListProducts\\index.tsx":"4","E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\pages\\Checkout\\index.tsx":"5","E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\pages\\HomePage\\index.tsx":"6","E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\components\\NavBarResposive\\index.tsx":"7","E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\components\\SliderSlick\\index.tsx":"8","E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\components\\NavBar\\index.tsx":"9","E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\components\\Checkout\\index.tsx":"10","E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\components\\Products\\index.tsx":"11","E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\services\\api.ts":"12","E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\components\\NavBarResposive\\Brand.tsx":"13","E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\components\\NavBarResposive\\BurgerMenu.tsx":"14","E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\components\\NavBarResposive\\CollapseMenu.tsx":"15","E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\pages\\Admin\\index.tsx":"16","E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\components\\Admin\\index.tsx":"17","E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\components\\Admin\\Login\\index.tsx":"18","E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\pages\\Admin\\AdminController\\index.tsx":"19","E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\components\\Admin\\AdminControler\\index.tsx":"20"},{"size":208,"mtime":1607385140385,"results":"21","hashOfConfig":"22"},{"size":342,"mtime":1610149180852,"results":"23","hashOfConfig":"22"},{"size":2188,"mtime":1609971815625,"results":"24","hashOfConfig":"22"},{"size":1508,"mtime":1607657529544,"results":"25","hashOfConfig":"22"},{"size":919,"mtime":1607657884429,"results":"26","hashOfConfig":"22"},{"size":3345,"mtime":1606953358512,"results":"27","hashOfConfig":"22"},{"size":2713,"mtime":1605641898007,"results":"28","hashOfConfig":"22"},{"size":6294,"mtime":1607881108925,"results":"29","hashOfConfig":"22"},{"size":1325,"mtime":1607728484399,"results":"30","hashOfConfig":"22"},{"size":12663,"mtime":1608257866645,"results":"31","hashOfConfig":"22"},{"size":16989,"mtime":1609949719613,"results":"32","hashOfConfig":"22"},{"size":140,"mtime":1610137032230,"results":"33","hashOfConfig":"22"},{"size":471,"mtime":1605915676507,"results":"34","hashOfConfig":"22"},{"size":518,"mtime":1608065515146,"results":"35","hashOfConfig":"22"},{"size":1980,"mtime":1605641942540,"results":"36","hashOfConfig":"22"},{"size":263,"mtime":1608037526365,"results":"37","hashOfConfig":"22"},{"size":235,"mtime":1608037658314,"results":"38","hashOfConfig":"22"},{"size":3776,"mtime":1608509021857,"results":"39","hashOfConfig":"22"},{"size":244,"mtime":1608073151024,"results":"40","hashOfConfig":"22"},{"size":3057,"mtime":1608252077948,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1izm0rn",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"44"},"E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\index.tsx",[],["89","90"],"E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\App.tsx",[],"E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\routes.tsx",["91","92","93","94"],"import React, { useEffect } from \"react\";\r\nimport { useHistory, useLocation } from 'react-router'\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\n\r\n// Importando Paginas\r\nimport HomePage from './pages/HomePage';\r\nimport ListProducts from './pages/ListProducts';\r\nimport Admin from './pages/Admin';\r\nimport AdminController from './pages/Admin/AdminController';\r\nimport Checkout from './pages/Checkout';\r\nimport api from './services/api';\r\n\r\nfunction Routes() {\r\n\r\n    const location = useLocation().pathname;\r\n    const history = useHistory();\r\n\r\n    const userName = localStorage.getItem(\"userName\");\r\n    const userToken = localStorage.getItem(\"userToken\");\r\n\r\n    if(location != \"/adminController\"){\r\n        localStorage.clear();\r\n    }\r\n\r\n    if((userName == null || userToken == null) && location == \"/adminController\"){\r\n        history.push(\"/admin\");\r\n    } else if((userName != null || userToken != null) && location == \"/adminController\"){\r\n        const authenticate = async () => {\r\n            const data = {\r\n                users: userName,\r\n                token: userToken\r\n            };\r\n\r\n            try {\r\n                await api.post('usersTokenAuthenticate', data);        \r\n            } catch (err) {\r\n                history.goBack();\r\n            }\r\n        }\r\n        authenticate();        \r\n    }\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route path=\"/\" exact component={HomePage} />\r\n                <Route path=\"/admin\" exact component={Admin} />\r\n                <Route path=\"/adminController\" exact component={AdminController} />\r\n                <Route path=\"/checkout\" exact component={Checkout} />\r\n                <Route path=\"/Canino\" component={ListProducts} />\r\n                <Route path=\"/Felino\" component={ListProducts} />\r\n                <Route path=\"/Peixe\" component={ListProducts} />\r\n                <Route path=\"/Reptil\" component={ListProducts} />\r\n                <Route path=\"/Ave\" component={ListProducts} />\r\n                <Route path=\"/Roedor\" component={ListProducts} />\r\n            </Switch>\r\n        </BrowserRouter>\r\n        \r\n    );\r\n}\r\n\r\nexport default Routes","E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\pages\\ListProducts\\index.tsx",["95","96","97"],"import React, { Component, useState } from 'react';\r\n\r\nimport Slide from '../../components/SliderSlick';\r\nimport NavBarResponsive from '../../components/NavBarResposive';\r\nimport Product from '../../components/Products';\r\n\r\n// Importando estilos\r\nimport '../../styles/global.css';\r\nimport './style.css';\r\n\r\ninterface Products {\r\n    id: number;\r\n    description: string;\r\n    value: number;\r\n    image: string;\r\n};\r\n\r\ninterface IProducts {\r\n    products: Products[];\r\n}\r\n\r\nfunction ListProducts() {\r\n\r\n    const [navBarOpen, setNavBarOpen] = useState(false);\r\n\r\n    function handleNavBar() {\r\n        if(navBarOpen == true){\r\n            setNavBarOpen(false);\r\n        } else {\r\n            setNavBarOpen(true)\r\n        } \r\n    }\r\n\r\n    \r\n        return (\r\n            <div id=\"list-products\">\r\n                <div className=\"list-products-nav\">\r\n                    <NavBarResponsive \r\n                        navbarState={navBarOpen} \r\n                        handleNavbar={handleNavBar} \r\n                    />\r\n                </div>\r\n\r\n                <div className=\"list-products-category\" \r\n                    \r\n                >\r\n                    <h1 className=\"list-products-title\">Oque vocÃª procura?</h1>\r\n                    <div className=\"list-products-slider\">\r\n                        <Slide />\r\n                    </div>\r\n                </div>\r\n\r\n                \r\n                <Product />\r\n                \r\n            </div>\r\n        )\r\n    \r\n}\r\n\r\nexport default ListProducts;","E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\pages\\Checkout\\index.tsx",["98","99","100"],"import React, { useState } from 'react';\r\n\r\nimport Checkout from '../../components/Checkout';\r\nimport NavBarResponsive from '../../components/NavBarResposive';\r\n\r\nimport '../../styles/global.css';\r\nimport './style.css';\r\n\r\nfunction CheckoutPage(){\r\n\r\n    const [navBarOpen, setNavBarOpen] = useState(false);\r\n\r\n    function handleNavBar() {\r\n        if(navBarOpen == true){\r\n            setNavBarOpen(false);\r\n        } else {\r\n            setNavBarOpen(true)\r\n        } \r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* <div className=\"component-navbar\">\r\n                <NavBarResponsive \r\n                    navbarState={navBarOpen} \r\n                    handleNavbar={handleNavBar} \r\n                />\r\n            </div> */}\r\n            \r\n            <div className=\"component-checkout\">\r\n                <Checkout />\r\n            </div>\r\n            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default CheckoutPage;","E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\pages\\HomePage\\index.tsx",[],"E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\components\\NavBarResposive\\index.tsx",[],"E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\components\\SliderSlick\\index.tsx",[],"E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\components\\NavBar\\index.tsx",[],"E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\components\\Checkout\\index.tsx",["101","102","103","104","105"],"import React, { useState, FormEvent } from \"react\";\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MaskedInput from 'react-text-mask';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\n// Importando CSS\r\nimport \"../../styles/global.css\";\r\nimport \"./style.css\";\r\n\r\n// Importando logo\r\nimport LogoNav from \"../../images/logo-checkout.png\";\r\n\r\n// Interfaces\r\ninterface TextMaskCustomProps {\r\n    inputRef: (ref: HTMLInputElement | null) => void;\r\n}\r\n\r\ninterface State {\r\n    textmask: string;\r\n}\r\n  \r\n// CustomizaÃ§Ã£o dos Inputs\r\nconst CssTextField = withStyles({\r\n    root: {\r\n        '& label.Mui-focused': {\r\n            color: 'green',\r\n        },\r\n        '& .MuiInput-underline:after': {\r\n            borderBottomColor: 'green',\r\n        },\r\n        '& .MuiOutlinedInput-root': {\r\n            '& fieldset': {\r\n                borderColor: 'grey',\r\n            },\r\n            '&:hover fieldset': {\r\n                borderColor: 'grey',\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                borderColor: 'green',\r\n            },\r\n        },\r\n    },\r\n})(TextField);\r\n\r\n// CustomizaÃ§Ã£o dos Inputs\r\nconst CssSelect = withStyles({\r\n    root: {\r\n        '& .MuiOutlinedInput-root': {\r\n            '&.Mui-focused': {\r\n                '&.MuiOutlinedInput-notchedOutline fieldset': {\r\n                    borderColor: 'green',\r\n                },\r\n            },\r\n        },\r\n    },\r\n})(Select);\r\n\r\nfunction TextMaskCustom(props: TextMaskCustomProps) {\r\n    const { inputRef, ...other } = props;\r\n  \r\n    return (\r\n        <MaskedInput\r\n            {...other}\r\n            ref={(ref: any) => {\r\n            inputRef(ref ? ref.inputElement : null);\r\n            }}\r\n            mask={['(', /[1-9]/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\r\n            placeholderChar={'\\u2000'}\r\n            showMask\r\n        />\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    margin: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n      selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction Checkout() {\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n    const [name, setName] = useState('');\r\n    const [street, setStreet] = useState('');\r\n    const [number, setNumber] = useState('');\r\n    const [neighborhood, setNeighborhood] = useState('');\r\n\r\n    const [phone, setPhone] = useState({\r\n        phonemask: '(â) âââ-ââââ',\r\n    });\r\n    const handleChangePhone = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setPhone({\r\n            ...phone,\r\n            [event.target.name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const [payment, setPayment] = React.useState('');\r\n    const handleChangeSelectPayment = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n        setPayment(event.target.value as string);\r\n    };\r\n\r\n    const [withdrawal, setWithdrawal] = React.useState('');\r\n    const handleChangeSelectWithdrawal = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n        setWithdrawal(event.target.value as string);\r\n    };\r\n\r\n    async function handleSubmit(event: FormEvent) {\r\n        event.preventDefault();\r\n\r\n        const dados = {\r\n            \"nome\": name,\r\n            \"rua\": street,\r\n            \"numero\": number,\r\n            \"bairro\": neighborhood,\r\n            \"telefone\": phone,\r\n            \"forma de ragamento\": payment,\r\n            \"forma de retirada\": withdrawal\r\n        }\r\n\r\n        const linkWhatsApp = \"https://api.whatsapp.com/send?phone=\";\r\n\r\n        const destinyPhone = \"5534996751548\";\r\n\r\n        const sizeSession = sessionStorage.length;\r\n        const valueTotal = localStorage.getItem(\"Valor Total: \");\r\n        const formatValueTotal = Number(valueTotal).toLocaleString('pt-br',{style: 'currency', currency: 'BRL'});\r\n        console.log(formatValueTotal);\r\n        var listProducts: any = [];\r\n        Object.keys(sessionStorage).forEach(function (key) {\r\n            const itens = sessionStorage.getItem(key);\r\n            const formatItens = itens != null ? JSON.parse(itens) : null;\r\n            listProducts.push(formatItens);\r\n        });\r\n\r\n        var arrayPedido: any = [];\r\n        \r\n        listProducts.map((value: any, i: number) => {\r\n            var produto = value.description;\r\n            var qtd = value.count;\r\n            var subtotal = value.subtotal;\r\n            var formatSubtotal = subtotal.toLocaleString('pt-br',{style: 'currency', currency: 'BRL'});\r\n            var header = i == 0 ? \"Meu(s) Pedido(s):\\n--------------------\\n\\n\" : \"\";\r\n            var pedidos = \"Produto: \"+ produto + \"\\n\" + \r\n                       \"Quantidade: \" + qtd + \"\\n\" + \r\n                       \"Subtotal: \" + formatSubtotal + \"\\n\" +\r\n                       \"--------------------\"+\"\\n\";\r\n            // console.log(text); \r\n            var dadosCliente = \"\";\r\n            if(sizeSession == i + 1){\r\n                dadosCliente = \"\\n--------------------\\n\" +\r\n                               \"\\nValor Total: \" + formatValueTotal + \"\\n\" +\r\n                               \"\\n--------------------\\n\" +\r\n                               \"\\nDados do Cliente:\\n\" +\r\n                               \"Nome: \" + dados.nome + \"\\n\" +\r\n                               \"Telefone: \" + dados.telefone.phonemask + \"\\n\" +\r\n                               \"EndereÃ§o: \\n\" +\r\n                               \"Rua / Av.: \" + dados.rua + \"\\n\" +\r\n                               \"Numero: \" + dados.numero + \"\\n\" +\r\n                               \"Bairro: \" + dados.bairro + \"\\n\" +\r\n                               \"Forma de Pagamento: \" + dados[\"forma de ragamento\"] + \"\\n\" +\r\n                               \"Forma de Retirada: \" + dados[\"forma de retirada\"] + \"\\n\";\r\n                \r\n            }\r\n\r\n            var textoPedido = header + pedidos + dadosCliente;\r\n            arrayPedido.push(textoPedido);\r\n\r\n        });\r\n\r\n        var listaPedidos = arrayPedido.join(\"\");\r\n        var encoderPedido = window.encodeURIComponent(listaPedidos.toString());\r\n        await window.open(linkWhatsApp + destinyPhone + \"&text=\" + encoderPedido, \"_blank\");\r\n\r\n        sessionStorage.clear();\r\n        localStorage.clear();\r\n        window.location.replace(\"/\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-checkout\">\r\n            <img\r\n                className=\"container-logo-cehckout\"\r\n                src={LogoNav}\r\n                alt=\"Logo Petshop\"\r\n            />\r\n\r\n            <div className=\"content-checkout\">\r\n                    <h2 className=\"content-title-checkout\">\r\n                        Para finalizar seu pedido precisamos de alguns dados!\r\n                    </h2>\r\n                    <form onSubmit={handleSubmit} className=\"content-form-checkout\">\r\n                        <CssTextField\r\n                            id=\"form-input-name\"\r\n                            className={classes.margin + \" form-input-name\"}\r\n                            label=\"Seu Nome Completo\"\r\n                            variant=\"outlined\"\r\n                            value={name}\r\n                            onChange={event => setName(event.target.value)}\r\n                            required\r\n                        />\r\n\r\n                        <div className=\"form-address\">\r\n                            <CssTextField\r\n                                id=\"form-input-street\"\r\n                                className={classes.margin + \" form-input-street\"}\r\n                                label=\"Rua / Avenida\"\r\n                                variant=\"outlined\"\r\n                                value={street}\r\n                                onChange={event => setStreet(event.target.value)}\r\n                                required\r\n                            />\r\n\r\n                            <CssTextField\r\n                                id=\"form-input-number\"\r\n                                className={classes.margin + \" form-input-number\"}\r\n                                label=\"NÂº\"\r\n                                variant=\"outlined\"\r\n                                type=\"number\"\r\n                                value={number}\r\n                                onChange={event => setNumber(event.target.value)}\r\n                                required\r\n                            />\r\n\r\n                            <CssTextField\r\n                                id=\"form-input-neighborhood\"\r\n                                className={classes.margin + \" form-input-neighborhood\"}\r\n                                label=\"Bairro\"\r\n                                variant=\"outlined\"\r\n                                value={neighborhood}\r\n                                onChange={event => setNeighborhood(event.target.value)}\r\n                                required\r\n                            />\r\n\r\n                            <CssTextField\r\n                                value={phone.phonemask}\r\n                                onChange={handleChangePhone}\r\n                                name=\"phonemask\"\r\n                                id=\"formatted-text-mask-input\"\r\n                                className={classes.margin + \" form-input-phone\"}\r\n                                label=\"Telefone\"\r\n                                variant=\"outlined\"\r\n                                InputProps={{\r\n                                    inputComponent: TextMaskCustom as any,\r\n                                }}\r\n                                required\r\n                            />\r\n\r\n                            <FormControl variant=\"outlined\" className={classes.formControl + \" form-select-payment\"}>\r\n                                <InputLabel id=\"demo-simple-select-outlined-label\">Forma de Pagamento</InputLabel>\r\n                                <CssSelect\r\n                                    labelId=\"demo-simple-select-outlined-label\"\r\n                                    id=\"demo-simple-select-outlined\"\r\n                                    label=\"Forma de Pagamento\"\r\n                                    value={payment}\r\n                                    onChange={handleChangeSelectPayment}\r\n                                    required\r\n                                >\r\n                                    <MenuItem value=\"\">\r\n                                        <em>None</em>\r\n                                    </MenuItem>\r\n                                    <MenuItem value=\"CartÃ£o\">CartÃ£o DÃ©bito / CrÃ©dito</MenuItem>\r\n                                    <MenuItem value=\"Dinheiro\">Dinheiro</MenuItem>\r\n                                </CssSelect>\r\n                            </FormControl>\r\n\r\n                            <FormControl variant=\"outlined\" className={classes.formControl + \" form-select-withdrawal\"}>\r\n                                <InputLabel id=\"demo-simple-select-outlined-label\">Forma de Retirada</InputLabel>\r\n                                <CssSelect\r\n                                    labelId=\"demo-simple-select-outlined-label\"\r\n                                    id=\"demo-simple-select-outlined\"\r\n                                    value={withdrawal}\r\n                                    onChange={handleChangeSelectWithdrawal}\r\n                                    label=\"Forma de Retirada\"\r\n                                    required\r\n                                >\r\n                                    <MenuItem value=\"\">\r\n                                        <em>None</em>\r\n                                    </MenuItem>\r\n                                    <MenuItem value=\"Entrega\">Entrega</MenuItem>\r\n                                    <MenuItem value=\"Retirada na Loja\">Retirada na Loja</MenuItem>\r\n                                </CssSelect>\r\n                            </FormControl>\r\n\r\n                        </div>\r\n\r\n                        <button \r\n                            className=\"form-btn-final\"\r\n                            type=\"submit\"\r\n                        >\r\n                            Enviar Pedido\r\n                        </button>\r\n                        <p className=\"form-warning\">*Voce SerÃ¡ redirecionado ao Whatsapp para o vendedor confirmar o pedido!</p>\r\n\r\n                    </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Checkout;\r\n","E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\components\\Products\\index.tsx",["106","107","108","109","110","111","112"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport {\r\n    ModalProvider,\r\n    Modal,\r\n    useModal,\r\n    ModalTransition,\r\n} from \"react-simple-hook-modal\";\r\nimport { FiPlus, FiMinus } from \"react-icons/fi\";\r\nimport { MdClose, MdDeleteForever, MdShoppingCart } from \"react-icons/md\";\r\n\r\nimport \"react-simple-hook-modal/dist/styles.css\";\r\nimport \"../../styles/global.css\";\r\nimport \"./style.css\";\r\nimport \"./modal-style.css\";\r\n\r\nimport api from \"../../services/api\";\r\n\r\ninterface listProducts {\r\n    id: number;\r\n    description: string;\r\n    amount: number;\r\n    value: number;\r\n    image: string;\r\n    count: number;\r\n    subtotal: number;\r\n}\r\n\r\nconst titles = [\r\n    {title: \"Alimentadores e Bebedores\", link: \"AlimentadoresBebedores\"},\r\n    {title: \"Anti Pulgas e Carrapatos\", link: \"AntiPulgasCarrapatos\"},\r\n    {title: \"Banho\", link: \"Banho\"},\r\n    {title: \"Banho e Tosa\", link: \"BanhoTosa\"},\r\n    {title: \"Brinquedos\", link: \"Brinquedos\"},\r\n    {title: \"Casas e Camas\", link: \"CasasCamas\"},\r\n    {title: \"Consulta VeterinÃ¡ria\", link: \"ConsultaVeterinaria\"},\r\n    {title: \"Produtos para Banho\", link: \"ProdutosBanho\"},\r\n    {title: \"Petiscos\", link: \"Petiscos\"},\r\n    {title: \"RaÃ§Ãµes\", link: \"Racoes\"},\r\n    {title: \"Medicamentos\", link: \"Medicamentos\"},\r\n    {title: \"Roupas e AcessÃ³rios\", link: \"RoupasAcessorios\"},\r\n]\r\n\r\nfunction Products() {\r\n    const groupLocation = useLocation();\r\n    const stringPath = groupLocation.pathname.split('/');\r\n\r\n    const indexPath = `${groupLocation.pathname}`;\r\n    const { isModalOpen, openModal, closeModal } = useModal();\r\n\r\n    const [listProducts, setListProducts] = useState<listProducts[]>([]);\r\n    const [newListProducts, setNewListProducts] = useState<listProducts[]>([]);\r\n    const [newCount, setNewCount] = useState(1);\r\n    const [deleteButton, setDeleteButton] = useState(false);\r\n    const [total, setTotal] = useState(0);\r\n    \r\n    useEffect(() => {\r\n\r\n            api.get(`products${indexPath}`).then((response) => {\r\n                \r\n                \r\n                const status = response.status;\r\n                console.log(response.data);\r\n\r\n                if(status != null){\r\n                    setListProducts(response.data);\r\n                }\r\n                \r\n                \r\n            }).catch(()=> {\r\n                // console.log(erro.);\r\n                setListProducts([]);\r\n            });\r\n        \r\n        \r\n    }, [indexPath]);\r\n\r\n    console.log(listProducts);\r\n\r\n    function totalItens(){\r\n        var itens = 0;\r\n        for(let i = 0; i < sessionStorage.length; i++){\r\n            itens++\r\n        }\r\n        return itens;\r\n    }\r\n\r\n    function totalValue(){\r\n        var total = 0;\r\n        newListProducts.map((value)=>{\r\n            total = value.subtotal + total;\r\n        })\r\n        return total;\r\n    }\r\n\r\n    function Comprar() {\r\n        // Listando os Produtos no Session Storage e guardando em um Array\r\n        Object.keys(sessionStorage).forEach(function (key) {\r\n            const itens = sessionStorage.getItem(key);\r\n            newListProducts.push(itens !== null ? JSON.parse(itens) : null);\r\n        });\r\n        setTotal(totalValue());\r\n        openModal();\r\n    }\r\n\r\n    if(listProducts.length <= 0){\r\n        console.log(\"Vazio\");\r\n    }\r\n\r\n    function ModalClose() {\r\n        function clearArray(array: any) {\r\n            while (array.length) {\r\n                array.pop();\r\n            }\r\n        }\r\n        clearArray(newListProducts); // Limpa o Array toda vez que for fechado o Modal\r\n        closeModal();\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className=\"list-products-products\">\r\n            <div className=\"list-products-top\">\r\n                <div className=\"title-category\">\r\n                    {titles.map((value, i) => { \r\n                        if(stringPath[2] == value.link){\r\n                            return (\r\n                                <h1 key={i}>{ value.title }</h1>\r\n                            );\r\n                        }\r\n                    })}\r\n                </div>\r\n\r\n                <div className=\"list-products-products-group\">\r\n                    <button className=\"list-products-top-btn\" type=\"button\" onClick={ Comprar }>\r\n                        <MdShoppingCart />\r\n                        Meu Carrinho\r\n                    </button>\r\n                    <div className=\"list-products-top-total-itens\">{ totalItens() }</div>\r\n                </div>\r\n            </div>\r\n            <div className=\"center-products\">\r\n                {listProducts.length == 0 ?\r\n                    <div className=\"center-products-clear\">Desculpe-me, no momento estamos sem este produto!</div>\r\n                    :\r\n                    listProducts.map((product, i) => {\r\n                        async function Comprar() {\r\n                            const listsProductsNew = {\r\n                                id: product.id,\r\n                                image: product.image,\r\n                                description: product.description,\r\n                                amount: product.amount,\r\n                                value: Number(product.value),\r\n                                count: 1,\r\n                                subtotal: Number(product.value)\r\n                            };\r\n\r\n                            // Adicionando Produtos no Session Storage\r\n                            const itens = sessionStorage.setItem(\r\n                                product.id.toString(),\r\n                                JSON.stringify(listsProductsNew)\r\n                            );\r\n\r\n                            // Listando os Produtos no Session Storage e guardando em um Array\r\n                            Object.keys(sessionStorage).forEach(function (key) {\r\n                                const itens = sessionStorage.getItem(key);\r\n                                newListProducts.push(itens !== null ? JSON.parse(itens) : null);\r\n                                setNewListProducts(newListProducts);\r\n                            });\r\n                            const total = totalValue();\r\n                            setTotal(total);\r\n                            localStorage.setItem(\"Valor Total: \", total.toString());\r\n                            await openModal();\r\n                        }\r\n\r\n                        \r\n                        return (\r\n                            <div className=\"products\" key={product.id}>\r\n                                <div className=\"products-background\">\r\n                                    <img\r\n                                        src={product.image}\r\n                                        alt=\"Comedouro para Cachorro\"\r\n                                        className=\"img-products\"\r\n                                    />\r\n                                    <div className=\"description-products\">\r\n                                        {product.description}\r\n                                    </div>\r\n                                    <div className=\"value-products\">R$ {product.value.toString().replace(\".\", \",\")}</div>\r\n                                    <button\r\n                                        id={product.id.toString()}\r\n                                        className=\"btn-products\" \r\n                                        onClick={ Comprar }\r\n                                    >\r\n                                        Adicionar ao Carrinho\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })\r\n                }\r\n            </div>\r\n\r\n            {/* Modal */}\r\n            <ModalProvider backdropClassName=\"modal-page-backdrop\">\r\n                <Modal\r\n                    modalClassName=\"modal-page\"\r\n                    id=\"any-unique-identifier\"\r\n                    isOpen={isModalOpen}\r\n                    transition={ModalTransition.BOTTOM_UP}\r\n                >\r\n\r\n                    <div className=\"modal-header\">\r\n                        <h1 className=\"modal-title\">Meu Carrinho</h1>\r\n                        <MdClose\r\n                            className=\"modal-icon-close\"\r\n                            onClick={ModalClose}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"modal-body\">\r\n                        <div className=\"modal-table\">\r\n                            <table className=\"table-items\">\r\n                                <thead>\r\n                                    <tr className=\"table-header\">\r\n                                        <td className=\"table-header-image\">Imagem</td>\r\n                                        <td className=\"table-header-products\">Produtos</td>\r\n                                        <td className=\"table-header-quantities\">Quantidade</td>\r\n                                        <td className=\"table-header-value\">Valor</td>\r\n                                        <td className=\"table-header-action\"></td>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    { newListProducts.map( (listProduct, i) => {\r\n\r\n                                        const key = listProduct.id.toString();\r\n                                        const itemStorage = sessionStorage.getItem(key);\r\n                                        const objetcItem = itemStorage !== null ? JSON.parse(itemStorage) : null;\r\n                                        const subTotal = objetcItem.subtotal.toFixed(2).toString().replace(\".\", \",\");\r\n                                        \r\n                                        \r\n                                        function Increment(){\r\n                                            \r\n                                            if(listProduct.count >= listProduct.amount){\r\n                                                listProduct.count = listProduct.amount;\r\n                                            } else {\r\n                                                listProduct.count = listProduct.count + 1;\r\n                                            }\r\n                                            listProduct.subtotal = listProduct.value * listProduct.count;\r\n                                            objetcItem.count = listProduct.count;\r\n                                            objetcItem.subtotal = listProduct.value * listProduct.count;\r\n                                            sessionStorage.setItem(key, JSON.stringify(objetcItem));\r\n                                            const total = totalValue();\r\n                                            console.log(total);\r\n                                            setTotal(total);\r\n                                            localStorage.setItem(\"Valor Total: \", total.toString());\r\n                                            return setNewCount(listProduct.count);\r\n                                        }\r\n\r\n                                        function Decrement(){\r\n                                            if(listProduct.count <= 1 ){\r\n                                                const Count = 1;\r\n                                                return setNewCount(Count);\r\n                                            } else {\r\n                                                listProduct.count = listProduct.count - 1;\r\n                                                listProduct.subtotal = listProduct.value * listProduct.count;\r\n                                                objetcItem.count = listProduct.count;\r\n                                                objetcItem.subtotal = listProduct.value * listProduct.count;\r\n                                                sessionStorage.setItem(key, JSON.stringify(objetcItem));\r\n                                                const total = totalValue();\r\n                                                console.log(total);\r\n                                                setTotal(total);\r\n                                                localStorage.setItem(\"Valor Total: \", total.toString());\r\n                                                return setNewCount(listProduct.count);\r\n                                            }\r\n                                        }\r\n\r\n                                        const handleChange = (event: any) => {\r\n                                            setNewCount(listProduct.count);\r\n                                        }\r\n\r\n                                        function DeleteItem () {\r\n                                            sessionStorage.removeItem(key);\r\n                                            newListProducts.splice(i, 1);\r\n\r\n                                            if(newListProducts.length <= 0){\r\n                                                sessionStorage.clear();\r\n                                                closeModal();\r\n                                            }\r\n                                            \r\n                                            if(deleteButton == false){\r\n                                                setDeleteButton(true);\r\n                                            } else {\r\n                                                setDeleteButton(false);\r\n                                            }\r\n\r\n                                            const total = totalValue();\r\n                                            setTotal(total);\r\n                                            localStorage.setItem(\"Valor Total: \", total.toString());\r\n\r\n                                        }\r\n\r\n                                        return (\r\n                                            <tr className=\"table-body\" key={listProduct.id}>\r\n                                                <td className=\"td-image-table\">\r\n                                                    <img src={listProduct.image} alt=\"Imagens Produtos\" className=\"modal-product-image\"/>\r\n                                                </td>\r\n                                                <td className=\"td-description-table\">\r\n                                                    <p className=\"modal-description\"> \r\n                                                        {listProduct.description}\r\n                                                    </p>\r\n                                                </td>\r\n                                                <td className=\"td-quantities-table\" >\r\n                                                    <FiMinus type=\"button\" onClick={ Decrement } />\r\n                                                    <input type=\"number\" id=\"inputCount\" className=\"modal-input-quantities\" value={ listProduct.count } onChange={ handleChange }/>\r\n                                                    <FiPlus type=\"button\" onClick={ Increment } />\r\n                                                </td>\r\n                                                <td className=\"td-value-table\" >\r\n                                                    <h4>R$ { subTotal }</h4>\r\n                                                </td>\r\n                                                <td className=\"td-action-table\" >\r\n                                                    <MdDeleteForever type=\"submit\" className=\"td-icon-table\" onClick={ DeleteItem }/>\r\n                                                </td>\r\n                                            </tr>\r\n                                        );\r\n                                    })}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        \r\n\r\n                        <div className=\"modal-amount\">\r\n                            <h3 className=\"h3-amount-total\">Valor Total</h3>\r\n                            <div className=\"modal-amount-value\">\r\n                                <h4>R$ { total.toFixed(2).toString().replace(\".\", \",\") }</h4>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"modal-buttons\">\r\n                            <Link to=\"/checkout\" type=\"button\" className=\"modal-btn\">\r\n                                Finalizar Compra\r\n                            </Link>\r\n                            <button type=\"button\" className=\"modal-btn\" onClick={ModalClose}>\r\n                                Continuar Comprando\r\n                            </button>\r\n                            <Link to=\"/\" type=\"button\" className=\"modal-btn\">\r\n                                Comprar para outro Pet\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            </ModalProvider>\r\n\r\n        \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Products;\r\n","E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\services\\api.ts",[],"E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\components\\NavBarResposive\\Brand.tsx",[],"E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\components\\NavBarResposive\\BurgerMenu.tsx",[],"E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\components\\NavBarResposive\\CollapseMenu.tsx",[],"E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\pages\\Admin\\index.tsx",[],"E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\components\\Admin\\index.tsx",[],"E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\components\\Admin\\Login\\index.tsx",[],"E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\pages\\Admin\\AdminController\\index.tsx",[],"E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\components\\Admin\\AdminControler\\index.tsx",["113"],"import React, { FormEvent, ChangeEvent, useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { MdCloudUpload, MdDoneAll, MdPowerSettingsNew } from 'react-icons/md'\r\n// import CloudUploadIcon from '';\r\n\r\n\r\n// Importando CSS\r\nimport '../../../styles/global.css';\r\nimport './style.css';\r\n\r\n// Importando Logo\r\nimport Logo from '../../../images/logo-checkout.png';\r\nimport api from '../../../services/api';\r\n\r\nfunction AdminControler(){\r\n\r\n    const [file, setFile] = useState<File[]>([]);\r\n    const userName = localStorage.getItem(\"userName\");\r\n    const history = useHistory();\r\n\r\n    function handleSelectedFile(event: ChangeEvent<HTMLInputElement>){\r\n        if(!event.target.files){\r\n            return;\r\n        }\r\n        const fileImport = Array.from(event.target.files);\r\n\r\n        if(fileImport[0].type != \"application/vnd.ms-excel\"){\r\n            alert(\"Formato de Arquivo nÃ£o Aceito!\");\r\n        } else {\r\n            setFile(fileImport);\r\n        }   \r\n    }\r\n    \r\n    function handleLogout(){\r\n        history.push(\"/admin\");\r\n    }\r\n\r\n    async function handleSubmit(event: FormEvent){\r\n        event.preventDefault();\r\n\r\n        const data = new FormData();\r\n\r\n        if(file.length > 0){\r\n            data.append('arquives', file[0]);\r\n            await api.post('uploads', data);\r\n            alert(\"Produtos importados com Sucesso!\");\r\n        } else {\r\n            alert('Campo Upload Vazio!');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-admin-controler\">\r\n            <div className=\"content-admin-controller\">\r\n                <div className=\"content-header\">\r\n                    <h1>Seja Bem Vindo { userName }</h1>\r\n                    <p onClick={handleLogout}>\r\n                        <MdPowerSettingsNew className=\"content-icon\"/>\r\n                        logout\r\n                    </p>\r\n                </div>\r\n                <div className=\"content-logo\">\r\n                    <img className=\"content-img\" src={Logo} alt=\"Logo\"/>\r\n                </div>\r\n                <form className=\"content-form\" onSubmit={handleSubmit}>\r\n                    <h1>Importar Produtos</h1>\r\n                    <label htmlFor=\"fileUpload\" className=\"content-label-upload\">\r\n                        <MdCloudUpload className=\"icon\"/> Upload\r\n                    </label>\r\n\r\n                    {file.length > 0 &&\r\n                        <p className=\"content-file-name\">\r\n                            <MdDoneAll className=\"p-icon\"/>\r\n                            {file[0].name}\r\n                        </p>\r\n                    }\r\n\r\n                    <input type=\"file\" id=\"fileUpload\" className=\"content-file-upload\" onChange={handleSelectedFile}/>\r\n                    \r\n                    <button \r\n                        className=\"form-btn-upload\"\r\n                        type=\"submit\"\r\n                    >\r\n                        Importar\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdminControler;",{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":1,"column":17,"nodeType":"120","messageId":"121","endLine":1,"endColumn":26},{"ruleId":"122","severity":1,"message":"123","line":21,"column":17,"nodeType":"124","messageId":"125","endLine":21,"endColumn":19},{"ruleId":"122","severity":1,"message":"126","line":25,"column":60,"nodeType":"124","messageId":"125","endLine":25,"endColumn":62},{"ruleId":"122","severity":1,"message":"126","line":27,"column":67,"nodeType":"124","messageId":"125","endLine":27,"endColumn":69},{"ruleId":"118","severity":1,"message":"127","line":1,"column":17,"nodeType":"120","messageId":"121","endLine":1,"endColumn":26},{"ruleId":"118","severity":1,"message":"128","line":18,"column":11,"nodeType":"120","messageId":"121","endLine":18,"endColumn":20},{"ruleId":"122","severity":1,"message":"126","line":27,"column":23,"nodeType":"124","messageId":"125","endLine":27,"endColumn":25},{"ruleId":"118","severity":1,"message":"129","line":4,"column":8,"nodeType":"120","messageId":"121","endLine":4,"endColumn":24},{"ruleId":"118","severity":1,"message":"130","line":13,"column":14,"nodeType":"120","messageId":"121","endLine":13,"endColumn":26},{"ruleId":"122","severity":1,"message":"126","line":14,"column":23,"nodeType":"124","messageId":"125","endLine":14,"endColumn":25},{"ruleId":"118","severity":1,"message":"131","line":22,"column":11,"nodeType":"120","messageId":"121","endLine":22,"endColumn":16},{"ruleId":"132","severity":1,"message":"133","line":155,"column":50,"nodeType":"134","messageId":"135","endLine":155,"endColumn":52},{"ruleId":"122","severity":1,"message":"126","line":160,"column":28,"nodeType":"124","messageId":"125","endLine":160,"endColumn":30},{"ruleId":"136","severity":1,"message":"137","line":164,"column":46,"nodeType":"124","messageId":"138","endLine":164,"endColumn":47},{"ruleId":"122","severity":1,"message":"126","line":167,"column":28,"nodeType":"124","messageId":"125","endLine":167,"endColumn":30},{"ruleId":"118","severity":1,"message":"139","line":53,"column":12,"nodeType":"120","messageId":"121","endLine":53,"endColumn":20},{"ruleId":"132","severity":1,"message":"133","line":90,"column":36,"nodeType":"134","messageId":"135","endLine":90,"endColumn":38},{"ruleId":"132","severity":1,"message":"140","line":125,"column":44,"nodeType":"134","messageId":"141","endLine":125,"endColumn":46},{"ruleId":"122","severity":1,"message":"126","line":126,"column":42,"nodeType":"124","messageId":"125","endLine":126,"endColumn":44},{"ruleId":"122","severity":1,"message":"126","line":143,"column":38,"nodeType":"124","messageId":"125","endLine":143,"endColumn":40},{"ruleId":"118","severity":1,"message":"142","line":159,"column":35,"nodeType":"120","messageId":"121","endLine":159,"endColumn":40},{"ruleId":"122","severity":1,"message":"126","line":290,"column":61,"nodeType":"124","messageId":"125","endLine":290,"endColumn":63},{"ruleId":"122","severity":1,"message":"123","line":27,"column":31,"nodeType":"124","messageId":"125","endLine":27,"endColumn":33},"no-native-reassign",["143"],"no-negated-in-lhs",["144"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'Component' is defined but never used.","'IProducts' is defined but never used.","'NavBarResponsive' is defined but never used.","'handleNavBar' is defined but never used.","'State' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'newCount' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'itens' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
[{"E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\index.tsx":"1","E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\App.tsx":"2","E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\routes.tsx":"3","E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\pages\\ListProducts\\index.tsx":"4","E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\pages\\Checkout\\index.tsx":"5","E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\pages\\HomePage\\index.tsx":"6","E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\components\\NavBarResposive\\index.tsx":"7","E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\components\\SliderSlick\\index.tsx":"8","E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\components\\NavBar\\index.tsx":"9","E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\components\\Checkout\\index.tsx":"10","E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\components\\Products\\index.tsx":"11","E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\services\\api.ts":"12","E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\components\\NavBarResposive\\Brand.tsx":"13","E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\components\\NavBarResposive\\BurgerMenu.tsx":"14","E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\components\\NavBarResposive\\CollapseMenu.tsx":"15","E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\pages\\Admin\\index.tsx":"16","E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\components\\Admin\\index.tsx":"17","E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\components\\Admin\\Login\\index.tsx":"18","E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\pages\\Admin\\AdminController\\index.tsx":"19","E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\components\\Admin\\AdminControler\\index.tsx":"20","E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\react-app-env.d.ts":"21"},{"size":208,"mtime":1607385140385,"results":"22","hashOfConfig":"23"},{"size":384,"mtime":1610312711616,"results":"24","hashOfConfig":"23"},{"size":2171,"mtime":1610297790133,"results":"25","hashOfConfig":"23"},{"size":1508,"mtime":1607657529544,"results":"26","hashOfConfig":"23"},{"size":690,"mtime":1610839130842,"results":"27","hashOfConfig":"23"},{"size":3377,"mtime":1610317297443,"results":"28","hashOfConfig":"23"},{"size":3073,"mtime":1610462598678,"results":"29","hashOfConfig":"23"},{"size":5970,"mtime":1610462785898,"results":"30","hashOfConfig":"23"},{"size":1634,"mtime":1610462604608,"results":"31","hashOfConfig":"23"},{"size":12697,"mtime":1610927265414,"results":"32","hashOfConfig":"23"},{"size":19102,"mtime":1610841157191,"results":"33","hashOfConfig":"23"},{"size":140,"mtime":1610137032230,"results":"34","hashOfConfig":"23"},{"size":471,"mtime":1605915676507,"results":"35","hashOfConfig":"23"},{"size":518,"mtime":1608065515146,"results":"36","hashOfConfig":"23"},{"size":2115,"mtime":1610462717068,"results":"37","hashOfConfig":"23"},{"size":263,"mtime":1608037526365,"results":"38","hashOfConfig":"23"},{"size":235,"mtime":1608037658314,"results":"39","hashOfConfig":"23"},{"size":4080,"mtime":1610467190315,"results":"40","hashOfConfig":"23"},{"size":244,"mtime":1608073151024,"results":"41","hashOfConfig":"23"},{"size":3718,"mtime":1610467189009,"results":"42","hashOfConfig":"23"},{"size":41,"mtime":1610150293156,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"uqkrqo",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\index.tsx",[],"E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\App.tsx",[],"E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\routes.tsx",["92","93","94","95"],"import React, { useEffect } from \"react\";\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\n\r\n// Importando Paginas\r\nimport HomePage from './pages/HomePage';\r\nimport ListProducts from './pages/ListProducts';\r\nimport Admin from './pages/Admin';\r\nimport AdminController from './pages/Admin/AdminController';\r\nimport Checkout from './pages/Checkout';\r\nimport api from './services/api';\r\n\r\nfunction Routes() {\r\n\r\n    const location = useLocation().pathname;\r\n    const history = useHistory();\r\n\r\n    const userName = localStorage.getItem(\"userName\");\r\n    const userToken = localStorage.getItem(\"userToken\");\r\n\r\n    if(location != \"/adminController\"){\r\n        localStorage.clear();\r\n    }\r\n\r\n    if((userName == null || userToken == null) && location == \"/adminController\"){\r\n        history.push(\"/admin\");\r\n    } else if((userName != null || userToken != null) && location == \"/adminController\"){\r\n        const authenticate = async () => {\r\n            const data = {\r\n                users: userName,\r\n                token: userToken\r\n            };\r\n\r\n            try {\r\n                await api.post('usersTokenAuthenticate', data);        \r\n            } catch (err) {\r\n                history.goBack();\r\n            }\r\n        }\r\n        authenticate();        \r\n    }\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route path=\"/\" exact component={HomePage} />\r\n                <Route path=\"/admin\" component={Admin} />\r\n                <Route path=\"/adminController\" component={AdminController} />\r\n                <Route path=\"/checkout\" component={Checkout} />\r\n                <Route path=\"/Canino\" component={ListProducts} />\r\n                <Route path=\"/Felino\" component={ListProducts} />\r\n                <Route path=\"/Peixe\" component={ListProducts} />\r\n                <Route path=\"/Reptil\" component={ListProducts} />\r\n                <Route path=\"/Ave\" component={ListProducts} />\r\n                <Route path=\"/Roedor\" component={ListProducts} />\r\n            </Switch>\r\n        </BrowserRouter>\r\n        \r\n    );\r\n}\r\n\r\nexport default Routes","E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\pages\\ListProducts\\index.tsx",["96","97","98"],"import React, { Component, useState } from 'react';\r\n\r\nimport Slide from '../../components/SliderSlick';\r\nimport NavBarResponsive from '../../components/NavBarResposive';\r\nimport Product from '../../components/Products';\r\n\r\n// Importando estilos\r\nimport '../../styles/global.css';\r\nimport './style.css';\r\n\r\ninterface Products {\r\n    id: number;\r\n    description: string;\r\n    value: number;\r\n    image: string;\r\n};\r\n\r\ninterface IProducts {\r\n    products: Products[];\r\n}\r\n\r\nfunction ListProducts() {\r\n\r\n    const [navBarOpen, setNavBarOpen] = useState(false);\r\n\r\n    function handleNavBar() {\r\n        if(navBarOpen == true){\r\n            setNavBarOpen(false);\r\n        } else {\r\n            setNavBarOpen(true)\r\n        } \r\n    }\r\n\r\n    \r\n        return (\r\n            <div id=\"list-products\">\r\n                <div className=\"list-products-nav\">\r\n                    <NavBarResponsive \r\n                        navbarState={navBarOpen} \r\n                        handleNavbar={handleNavBar} \r\n                    />\r\n                </div>\r\n\r\n                <div className=\"list-products-category\" \r\n                    \r\n                >\r\n                    <h1 className=\"list-products-title\">Oque vocÃª procura?</h1>\r\n                    <div className=\"list-products-slider\">\r\n                        <Slide />\r\n                    </div>\r\n                </div>\r\n\r\n                \r\n                <Product />\r\n                \r\n            </div>\r\n        )\r\n    \r\n}\r\n\r\nexport default ListProducts;","E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\pages\\Checkout\\index.tsx",["99","100","101"],"import React, { useState } from 'react';\r\n\r\nimport Checkout from '../../components/Checkout';\r\nimport NavBarResponsive from '../../components/NavBarResposive';\r\n\r\nimport '../../styles/global.css';\r\nimport './style.css';\r\n\r\nfunction CheckoutPage(){\r\n\r\n    const [navBarOpen, setNavBarOpen] = useState(false);\r\n\r\n    function handleNavBar() {\r\n        if(navBarOpen == true){\r\n            setNavBarOpen(false);\r\n        } else {\r\n            setNavBarOpen(true)\r\n        } \r\n    }\r\n\r\n    return (\r\n        <>\r\n            \r\n            <div className=\"component-checkout\">\r\n                <Checkout />\r\n            </div>\r\n            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default CheckoutPage;","E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\pages\\HomePage\\index.tsx",[],"E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\components\\NavBarResposive\\index.tsx",[],"E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\components\\SliderSlick\\index.tsx",["102","103","104"],"import React, { Component } from 'react';\r\nimport Slider from 'react-slick';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n// Importando CSS dos Slider Slick\r\nimport 'slick-carousel/slick/slick.css'; \r\nimport 'slick-carousel/slick/slick-theme.css';\r\n\r\n// Importando CSS dos Slider modificado\r\nimport './style.css';\r\n\r\n// Importando Imagens\r\nimport Alimentador from '../../images/category/feeder.png';\r\nimport AntiPulgas from '../../images/category/fleas.png';\r\nimport Banho from '../../images/category/shower.png';\r\nimport BanhoTosa from '../../images/category/shear.png';\r\nimport Brinquedos from '../../images/category/toys.png';\r\nimport CasasCamas from '../../images/category/houses.png';\r\nimport ConsultaVeterinaria from '../../images/category/query.png';\r\nimport ProdutosBanho from '../../images/category/products.png';\r\nimport Petiscos from '../../images/category/snacks.png';\r\nimport Racoes from '../../images/category/rations.png';\r\nimport Medicamentos from '../../images/category/medicines.png';\r\nimport RoupasAcessorios from '../../images/category/clothes.png';\r\n\r\n\r\nexport default class SwipeToSlide extends Component {\r\n    render() {\r\n        const groupPath = window.location.pathname;\r\n        const newGroupPath = [];\r\n        const stringPath = groupPath.split('/');\r\n                        \r\n        for(let i = 0; i < stringPath.length; i++){\r\n            if(i === 1){\r\n                newGroupPath.push(stringPath[i])\r\n            } \r\n        }\r\n\r\n        const pathGroup = '/'+newGroupPath.toString();\r\n        console.log(pathGroup);\r\n\r\n        // ConfiguraÃ§Ãµes do Slide\r\n        const settings = {\r\n            className: \"center\",\r\n            infinite: false,\r\n            centerPadding: \"60px\",\r\n            slidesToShow: 5,\r\n            swipeToSlide: true,\r\n            responsive: [\r\n                {\r\n                    breakpoint: 1024,\r\n                    settings: {\r\n                        slidesToShow: 3,\r\n                        slidesToScroll: 3,\r\n                        infinite: true,\r\n                    }\r\n                },\r\n                {\r\n                    breakpoint: 600,\r\n                    settings: {\r\n                        slidesToShow: 2,\r\n                        slidesToScroll: 2,\r\n                        initialSlide: 2\r\n                    }\r\n                },\r\n                {\r\n                    breakpoint: 480,\r\n                    settings: {\r\n                    slidesToShow: 1,\r\n                    slidesToScroll: 1\r\n                    }\r\n                }\r\n            ]\r\n        };\r\n\r\n        // Guardando dados para o slide em um objeto\r\n        const categorys = [\r\n            {\r\n                img: Alimentador,\r\n                legend: 'Alimentadores e Bebedores',\r\n                alt: 'Alimentadores e Bebedores',\r\n                link: pathGroup+'/AlimentadoresBebedores',\r\n            },\r\n            {\r\n                img: AntiPulgas,\r\n                legend: 'Anti Pulgas e Carrapatos',\r\n                alt: 'Anti Pulgas e Carrapatos',\r\n                link: pathGroup+'/AntiPulgasCarrapatos'\r\n            },\r\n            // {\r\n            //     img: Banho,\r\n            //     legend: 'Banho',\r\n            //     alt: 'Banho',\r\n            //     link: pathGroup+'/Banho',\r\n            // },\r\n            // {\r\n            //     img: BanhoTosa,\r\n            //     legend: 'Banho e Tosa',\r\n            //     alt: 'Banho e Tosa',\r\n            //     link: pathGroup+'/BanhoTosa',\r\n            // },\r\n            {\r\n                img: Brinquedos,\r\n                legend: 'Brinquedos',\r\n                alt: 'Brinquedos',\r\n                link: pathGroup+'/Brinquedos',\r\n            },\r\n            {\r\n                img: CasasCamas,\r\n                legend: 'Casas e Camas',\r\n                alt: 'Casas e Camas',\r\n                link: pathGroup+'/CasasCamas',\r\n            },\r\n            // {\r\n            //     img: ConsultaVeterinaria,\r\n            //     legend: 'Consulta VeterinÃ¡ria',\r\n            //     alt: 'Consulta VeterinÃ¡ria',\r\n            //     link: pathGroup+'/ConsultaVeterinaria',\r\n            // },\r\n            {\r\n                img: ProdutosBanho,\r\n                legend: 'Produtos para Banho',\r\n                alt: 'Produtos para Banho',\r\n                link: pathGroup+'/ProdutosBanho',\r\n            },\r\n            {\r\n                img: Petiscos,\r\n                legend: 'Petiscos',\r\n                alt: 'Petiscos',\r\n                link: pathGroup+'/Petiscos',\r\n            },\r\n            {\r\n                img: Racoes,\r\n                legend: 'RaÃ§Ãµes',\r\n                alt: 'RaÃ§Ãµes',\r\n                link: pathGroup+'/Racoes',\r\n            },\r\n            {\r\n                img: Medicamentos,\r\n                legend: 'Medicamentos',\r\n                alt: 'Medicamentos',\r\n                link: pathGroup+'/Medicamentos',\r\n            },\r\n            {\r\n                img: RoupasAcessorios,\r\n                legend: 'Roupas e AcessÃ³rios',\r\n                alt: 'Roupas e AcessÃ³rios',\r\n                link: pathGroup+'/RoupasAcessorios',\r\n            }\r\n        ]\r\n\r\n        return (\r\n        // <div className=\"slider-container\">\r\n            <div className=\"slider-slick-container\">\r\n                <Slider {...settings}>\r\n                    {categorys.map((x, i) => {\r\n                        return (\r\n                            <Link to={x.link} key={i} type=\"button\" className=\"slider-slick-items\" >\r\n                                <div className=\"slider-slick-image\">\r\n                                    <img src={x.img} alt={x.alt}/>\r\n                                </div>\r\n                                <p className=\"slider-slick-legend\">\r\n                                    {x.legend}\r\n                                </p>\r\n                            </Link>\r\n                        );\r\n                    })}\r\n                </Slider>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n","E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\components\\NavBar\\index.tsx",["105"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n// Importando CSS\r\nimport '../../styles/global.css';\r\nimport './style.css';\r\n\r\n// Importando logo\r\nimport LogoNav from '../../images/options/nav-legs.png';\r\n\r\n\r\n\r\nfunction NavBar() {\r\n\r\n    // Verificando de EstÃ¡ na Home\r\n    // Se estiver nÃ£o deve mostrar o Texto Vitrine dos Animais\r\n    let getUrl = window.location.pathname;\r\n    var texto: string;\r\n\r\n    if(getUrl !== \"/\"){\r\n        texto = \"Vitrine dos Animais\";\r\n    } else {\r\n        texto = \"\";\r\n    }\r\n\r\n    return (\r\n        <nav className=\"navbar\" >\r\n            <div className=\"navbar-logo\">\r\n                <div className=\"navbar-img\">\r\n                    <img src={LogoNav} alt=\"Patas\"/>\r\n                    <h1 className=\"navbar-title\">{texto}</h1>\r\n                </div>\r\n            </div>\r\n            <ul className=\"navbar-ul\">\r\n                <li><a className=\"navbar-a\" href=\"https://vitrinedosanimais.com.br/sobre-n%C3%B3s\" target=\"_blanck\">Sobre</a></li>\r\n                <li><a className=\"navbar-a\" href=\"https://vitrinedosanimais.com.br/servi%C3%A7os-%2F-produtos\" target=\"_blanck\">ServiÃ§os</a></li>\r\n                <li><a className=\"navbar-a\" href=\"https://vitrinedosanimais.com.br/contato\" target=\"_blanck\">Contatos</a></li>\r\n                <li><a className=\"navbar-a\" href=\"https://vitrinedosanimais.com.br/servi%C3%A7os-%2F-produtos\" target=\"_blanck\">Produtos</a></li>\r\n                <li><a className=\"navbar-a\" href=\"https://vitrinedosanimais.com.br/in%C3%ADcio\" target=\"_blanck\">Lojas</a></li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default NavBar;","E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\components\\Checkout\\index.tsx",["106","107","108","109","110","111","112","113"],"E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\components\\Products\\index.tsx",["114","115","116","117","118","119"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { ModalProvider, Modal, useModal, ModalTransition } from \"react-simple-hook-modal\";\r\nimport Swal from \"sweetalert2\";\r\nimport Loader from 'react-loader-spinner'\r\nimport { FiPlus, FiMinus } from \"react-icons/fi\";\r\nimport { MdClose, MdDeleteForever, MdShoppingCart } from \"react-icons/md\";\r\n\r\nimport \"react-simple-hook-modal/dist/styles.css\";\r\nimport \"../../styles/global.css\";\r\nimport \"./style.css\";\r\nimport \"./modal-style.css\";\r\n\r\nimport api from \"../../services/api\";\r\n\r\ninterface listProducts {\r\n    id: number;\r\n    description: string;\r\n    amount: number;\r\n    value: number;\r\n    image: string;\r\n    count: number;\r\n    subtotal: number;\r\n};\r\n\r\nconst titles = [\r\n    {title: \"Alimentadores e Bebedores\", link: \"AlimentadoresBebedores\"},\r\n    {title: \"Anti Pulgas e Carrapatos\", link: \"AntiPulgasCarrapatos\"},\r\n    {title: \"Banho\", link: \"Banho\"},\r\n    {title: \"Banho e Tosa\", link: \"BanhoTosa\"},\r\n    {title: \"Brinquedos\", link: \"Brinquedos\"},\r\n    {title: \"Casas e Camas\", link: \"CasasCamas\"},\r\n    {title: \"Consulta VeterinÃ¡ria\", link: \"ConsultaVeterinaria\"},\r\n    {title: \"Produtos para Banho\", link: \"ProdutosBanho\"},\r\n    {title: \"Petiscos\", link: \"Petiscos\"},\r\n    {title: \"RaÃ§Ãµes\", link: \"Racoes\"},\r\n    {title: \"Medicamentos\", link: \"Medicamentos\"},\r\n    {title: \"Roupas e AcessÃ³rios\", link: \"RoupasAcessorios\"},\r\n];\r\n\r\nfunction Products() {\r\n    const groupLocation = useLocation();\r\n    const stringPath = groupLocation.pathname.split('/');\r\n\r\n    const indexPath = `${groupLocation.pathname}`;\r\n    const { isModalOpen, openModal, closeModal } = useModal();\r\n\r\n    const [listProducts, setListProducts] = useState<listProducts[]>([]);\r\n    const [newListProducts, setNewListProducts] = useState<listProducts[]>([]);\r\n    const [newCount, setNewCount] = useState(1);\r\n    // const [deleteButton, setDeleteButton] = useState(false);\r\n    const [total, setTotal] = useState(0);\r\n    const [loading, setLoading] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        async function getApiProducts() {\r\n            setLoading(true);\r\n            await api.get(`products${indexPath}`).then( (response) => {\r\n                const status = response.status;\r\n    \r\n                if(status != null){\r\n                    setListProducts(response.data);\r\n                }\r\n            }).catch(()=> {\r\n                setListProducts([]);\r\n            });\r\n            setLoading(false);\r\n        }\r\n        getApiProducts();\r\n    }, [indexPath]);\r\n\r\n    function carrinhoVazio() {\r\n        Swal.fire({\r\n            icon: 'warning',\r\n            title: 'Oops...',\r\n            text: 'Seu Carrinho estÃ¡ Vazio!',\r\n            confirmButtonColor: '#4abdac',\r\n            iconColor: '#4abdac',\r\n        });\r\n    }\r\n\r\n    function itensIguais() {\r\n        Swal.fire({\r\n            icon: 'warning',\r\n            title: 'Oops...',\r\n            text: 'Este produto jÃ¡ foi adicionado ao carrinho!',\r\n            confirmButtonColor: '#4abdac',\r\n        });\r\n    }\r\n\r\n    function itemDeletado() {\r\n        Swal.fire({\r\n            icon: 'question',\r\n            title: 'Compre Mais...',\r\n            text: 'Produto retirado do carrinho!',\r\n            confirmButtonColor: '#4abdac',\r\n        });\r\n    }\r\n\r\n    function totalItens(){\r\n        var itens = 0;\r\n        for(let i = 0; i < sessionStorage.length; i++){\r\n            if(sessionStorage.key(i) !== \"ValorTotal\"){\r\n                itens++;\r\n            }   \r\n        }\r\n        return itens;\r\n    }\r\n\r\n    function totalValue(){\r\n        var total = 0;\r\n        newListProducts.map((value)=>{\r\n            total = value.subtotal + total;\r\n        })\r\n        return total;\r\n    }\r\n\r\n    console.log(newListProducts);\r\n\r\n    // Listando os Produtos no Session Storage e guardando em um Array\r\n    function addCartButton() {\r\n        \r\n        Object.keys(sessionStorage).forEach(function (key) {\r\n            if(key !== \"ValorTotal\"){\r\n                const itens = sessionStorage.getItem(key);\r\n                newListProducts.push(itens !== null ? JSON.parse(itens) : null);\r\n            }\r\n        });\r\n\r\n        setTotal(totalValue());\r\n        if(newListProducts.length > 0){\r\n            openModal();\r\n        } else {\r\n            carrinhoVazio();\r\n        }\r\n    }\r\n\r\n    function ModalClose() {\r\n        function clearArray(array: any) {\r\n            while (array.length) {\r\n                array.pop();\r\n            }\r\n        }\r\n        clearArray(newListProducts); // Limpa o Array toda vez que for fechado o Modal\r\n        closeModal();\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className=\"list-products-products\">\r\n            <div className=\"list-products-top\">\r\n                <div className=\"title-category\">\r\n                    {titles.map((value, i) => { \r\n                        if(stringPath[2] == value.link){\r\n                            return (\r\n                                <h1 key={i}>{ value.title }</h1>\r\n                            );\r\n                        }\r\n                    })}\r\n                </div>\r\n\r\n                <div className=\"list-products-products-group\">\r\n                    <button className=\"list-products-top-btn\" type=\"button\" onClick={ addCartButton }>\r\n                        <MdShoppingCart />\r\n                        Meu Carrinho\r\n                    </button>\r\n                    <div className=\"list-products-top-total-itens\">{ totalItens() }</div>\r\n                </div>\r\n            </div>\r\n            <div className=\"center-products\">\r\n                                \r\n                {loading == true ?    \r\n                    <Loader className=\"loadingProducts\" type=\"Puff\" color=\"#4abdac\" height={50} width={50} timeout={3000} />\r\n                :\r\n                    <>\r\n                        {listProducts.length == 0 ?   \r\n                            <div className=\"center-products-clear\">Desculpe-me, no momento estamos sem este produto!</div>\r\n                        :\r\n                            listProducts.map(product => {\r\n                                const listsProductsNew = {\r\n                                    id: product.id,\r\n                                    image: product.image,\r\n                                    description: product.description,\r\n                                    amount: product.amount,\r\n                                    value: Number(product.value),\r\n                                    count: 1,\r\n                                    subtotal: Number(product.value)\r\n                                };\r\n\r\n                                // Adiciona produto no Session Storage\r\n                                function addSession(){\r\n                                    sessionStorage.setItem(\r\n                                        product.id.toString(),\r\n                                        JSON.stringify(listsProductsNew)\r\n                                    );\r\n                                }\r\n\r\n                                // Listando os Produtos no Session Storage e guardando em um Array\r\n                                function addArrayProducts(){\r\n                                    Object.keys(sessionStorage).forEach(function (key) {\r\n                                        if(key !== \"ValorTotal\"){\r\n                                            const itens = sessionStorage.getItem(key);\r\n                                            newListProducts.push(itens !== null ? JSON.parse(itens) : null);\r\n                                            setNewListProducts(newListProducts);\r\n                                        }\r\n                                    });\r\n                                }\r\n\r\n                                async function addCart() {\r\n                                    if(!sessionStorage.getItem(product.id.toString())){\r\n                                        addSession();\r\n                                        addArrayProducts();\r\n                                        const total = totalValue();\r\n                                        setTotal(total);\r\n                                        sessionStorage.setItem(\"ValorTotal\", total.toString());\r\n                                        return await openModal();\r\n                                    } else {\r\n                                        return itensIguais();\r\n                                    }\r\n                                }\r\n\r\n                                return (\r\n                                    <div className=\"products\" key={listsProductsNew.id}>\r\n                                        <div className=\"products-background\">\r\n                                            <img\r\n                                                src={listsProductsNew.image}\r\n                                                alt=\"Comedouro para Cachorro\"\r\n                                                className=\"img-products\"\r\n                                            />\r\n                                            <div className=\"description-products\">\r\n                                                {listsProductsNew.description}\r\n                                            </div>\r\n                                            <div className=\"value-products\">\r\n                                                R$ {listsProductsNew.value.toFixed(2).toString().replace(\".\", \",\")}\r\n                                            </div>\r\n                                            <button\r\n                                                id={listsProductsNew.id.toString()}\r\n                                                className=\"btn-products\" \r\n                                                onClick={ addCart }\r\n                                            >\r\n                                                Adicionar ao Carrinho\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                );\r\n                            })                                         \r\n                        }\r\n                    </>\r\n                }\r\n            </div>\r\n\r\n            {/* Modal */}\r\n            <ModalProvider backdropClassName=\"modal-page-backdrop\">\r\n                <Modal\r\n                    modalClassName=\"modal-page\"\r\n                    id=\"any-unique-identifier\"\r\n                    isOpen={isModalOpen}\r\n                    transition={ModalTransition.BOTTOM_UP}\r\n                >\r\n\r\n                    <div className=\"modal-header\">\r\n                        <h1 className=\"modal-title\">Meu Carrinho</h1>\r\n                        <MdClose\r\n                            className=\"modal-icon-close\"\r\n                            onClick={ModalClose}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"modal-body\">\r\n                        <div className=\"modal-table\">\r\n                            <table className=\"table-items\">\r\n                                <thead>\r\n                                    <tr className=\"table-header\">\r\n                                        <td className=\"table-header-image\">Imagem</td>\r\n                                        <td className=\"table-header-products\">Produtos</td>\r\n                                        <td className=\"table-header-quantities\">Quantidade</td>\r\n                                        <td className=\"table-header-value\">Valor</td>\r\n                                        <td className=\"table-header-action\"></td>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    { newListProducts.map( (listProduct, i) => {\r\n\r\n                                        const key = listProduct.id.toString();\r\n                                        const itemStorage = sessionStorage.getItem(key);\r\n                                        const objetcItem = itemStorage !== null ? JSON.parse(itemStorage) : null;\r\n                                        const subTotal = objetcItem.subtotal.toFixed(2).toString().replace(\".\", \",\");\r\n                                        \r\n                                        \r\n                                        function Increment(){ \r\n                                            if(listProduct.count >= listProduct.amount){\r\n                                                listProduct.count = listProduct.amount;\r\n                                            } else {\r\n                                                listProduct.count = listProduct.count + 1;\r\n                                            }\r\n\r\n                                            listProduct.subtotal = listProduct.value * listProduct.count;\r\n                                            objetcItem.count = listProduct.count;\r\n                                            objetcItem.subtotal = listProduct.value * listProduct.count;\r\n                                            sessionStorage.setItem(key, JSON.stringify(objetcItem));\r\n                                            const total = totalValue();\r\n                                            setTotal(total);\r\n                                            sessionStorage.setItem(\"ValorTotal\", total.toString());\r\n                                            return setNewCount(listProduct.count);\r\n                                        }\r\n\r\n                                        function Decrement(){\r\n                                            if(listProduct.count <= 1 ){\r\n                                                const Count = 1;\r\n                                                return setNewCount(Count);\r\n                                            } else {\r\n                                                listProduct.count = listProduct.count - 1;\r\n                                                listProduct.subtotal = listProduct.value * listProduct.count;\r\n                                                objetcItem.count = listProduct.count;\r\n                                                objetcItem.subtotal = listProduct.value * listProduct.count;\r\n                                                sessionStorage.setItem(key, JSON.stringify(objetcItem));\r\n                                                const total = totalValue();\r\n                                                setTotal(total);\r\n                                                sessionStorage.setItem(\"ValorTotal\", total.toString());\r\n                                                return setNewCount(listProduct.count);\r\n                                            }\r\n                                        }\r\n\r\n                                        const handleChange = (event: any) => {\r\n                                            setNewCount(listProduct.count);\r\n                                        }\r\n\r\n                                        async function DeleteItem () {\r\n                                            sessionStorage.removeItem(key);\r\n                                            newListProducts.splice(i, 1);\r\n\r\n                                            const total = totalValue();\r\n                                            setTotal(total);\r\n                                            sessionStorage.setItem(\"ValorTotal\", total.toString());\r\n\r\n                                            if(newListProducts.length <= 0){\r\n                                                sessionStorage.clear();\r\n                                                closeModal();\r\n                                            }\r\n                                            \r\n                                            return await itemDeletado();\r\n                                        }\r\n\r\n                                        return (\r\n                                            <tr className=\"table-body\" key={listProduct.id}>\r\n                                                <td className=\"td-image-table\">\r\n                                                    <img src={listProduct.image} alt=\"Imagens Produtos\" className=\"modal-product-image\"/>\r\n                                                </td>\r\n                                                <td className=\"td-description-table\">\r\n                                                    <p className=\"modal-description\"> \r\n                                                        {listProduct.description}\r\n                                                    </p>\r\n                                                </td>\r\n                                                <td className=\"td-quantities-table\" >\r\n                                                    <FiMinus type=\"button\" onClick={ Decrement } />\r\n                                                    <input type=\"number\" id=\"inputCount\" className=\"modal-input-quantities\" value={ listProduct.count } onChange={ handleChange }/>\r\n                                                    <FiPlus type=\"button\" onClick={ Increment } />\r\n                                                </td>\r\n                                                <td className=\"td-value-table\" >\r\n                                                    <h4>R$ { subTotal }</h4>\r\n                                                </td>\r\n                                                <td className=\"td-action-table\" >\r\n                                                    <MdDeleteForever type=\"submit\" className=\"td-icon-table\" onClick={ DeleteItem }/>\r\n                                                </td>\r\n                                            </tr>\r\n                                        );\r\n                                    })}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        \r\n\r\n                        <div className=\"modal-amount\">\r\n                            <h3 className=\"h3-amount-total\">Valor Total</h3>\r\n                            <div className=\"modal-amount-value\">\r\n                                <h4>R$ { total.toFixed(2).toString().replace(\".\", \",\") }</h4>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"modal-buttons\">\r\n                            <Link to=\"/checkout\" type=\"button\" className=\"modal-btn\">\r\n                                Finalizar Compra\r\n                            </Link>\r\n                            <button type=\"button\" className=\"modal-btn\" onClick={ModalClose}>\r\n                                Continuar Comprando\r\n                            </button>\r\n                            <Link to=\"/\" type=\"button\" className=\"modal-btn\">\r\n                                Comprar para outro Pet\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            </ModalProvider>\r\n\r\n        \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Products;\r\n","E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\services\\api.ts",[],"E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\components\\NavBarResposive\\Brand.tsx",[],"E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\components\\NavBarResposive\\BurgerMenu.tsx",[],"E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\components\\NavBarResposive\\CollapseMenu.tsx",[],"E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\pages\\Admin\\index.tsx",[],"E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\components\\Admin\\index.tsx",[],"E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\components\\Admin\\Login\\index.tsx",[],"E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\pages\\Admin\\AdminController\\index.tsx",[],"E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\components\\Admin\\AdminControler\\index.tsx",[],"E:\\Programas\\xampp\\htdocs\\petshop\\web\\src\\react-app-env.d.ts",[],{"ruleId":"120","severity":1,"message":"121","line":1,"column":17,"nodeType":"122","messageId":"123","endLine":1,"endColumn":26},{"ruleId":"124","severity":1,"message":"125","line":21,"column":17,"nodeType":"126","messageId":"127","endLine":21,"endColumn":19},{"ruleId":"124","severity":1,"message":"128","line":25,"column":60,"nodeType":"126","messageId":"127","endLine":25,"endColumn":62},{"ruleId":"124","severity":1,"message":"128","line":27,"column":67,"nodeType":"126","messageId":"127","endLine":27,"endColumn":69},{"ruleId":"120","severity":1,"message":"129","line":1,"column":17,"nodeType":"122","messageId":"123","endLine":1,"endColumn":26},{"ruleId":"120","severity":1,"message":"130","line":18,"column":11,"nodeType":"122","messageId":"123","endLine":18,"endColumn":20},{"ruleId":"124","severity":1,"message":"128","line":27,"column":23,"nodeType":"126","messageId":"127","endLine":27,"endColumn":25},{"ruleId":"120","severity":1,"message":"131","line":4,"column":8,"nodeType":"122","messageId":"123","endLine":4,"endColumn":24},{"ruleId":"120","severity":1,"message":"132","line":13,"column":14,"nodeType":"122","messageId":"123","endLine":13,"endColumn":26},{"ruleId":"124","severity":1,"message":"128","line":14,"column":23,"nodeType":"126","messageId":"127","endLine":14,"endColumn":25},{"ruleId":"120","severity":1,"message":"133","line":16,"column":8,"nodeType":"122","messageId":"123","endLine":16,"endColumn":13},{"ruleId":"120","severity":1,"message":"134","line":17,"column":8,"nodeType":"122","messageId":"123","endLine":17,"endColumn":17},{"ruleId":"120","severity":1,"message":"135","line":20,"column":8,"nodeType":"122","messageId":"123","endLine":20,"endColumn":27},{"ruleId":"120","severity":1,"message":"136","line":2,"column":10,"nodeType":"122","messageId":"123","endLine":2,"endColumn":14},{"ruleId":"120","severity":1,"message":"136","line":2,"column":10,"nodeType":"122","messageId":"123","endLine":2,"endColumn":14},{"ruleId":"120","severity":1,"message":"137","line":2,"column":16,"nodeType":"122","messageId":"123","endLine":2,"endColumn":26},{"ruleId":"124","severity":1,"message":"128","line":25,"column":30,"nodeType":"126","messageId":"127","endLine":25,"endColumn":32},{"ruleId":"124","severity":1,"message":"128","line":25,"column":63,"nodeType":"126","messageId":"127","endLine":25,"endColumn":65},{"ruleId":"138","severity":1,"message":"139","line":166,"column":50,"nodeType":"140","messageId":"141","endLine":166,"endColumn":52},{"ruleId":"124","severity":1,"message":"128","line":174,"column":18,"nodeType":"126","messageId":"127","endLine":174,"endColumn":20},{"ruleId":"142","severity":1,"message":"143","line":181,"column":51,"nodeType":"126","messageId":"144","endLine":181,"endColumn":52},{"ruleId":"124","severity":1,"message":"128","line":183,"column":28,"nodeType":"126","messageId":"127","endLine":183,"endColumn":30},{"ruleId":"120","severity":1,"message":"145","line":50,"column":12,"nodeType":"122","messageId":"123","endLine":50,"endColumn":20},{"ruleId":"138","severity":1,"message":"139","line":112,"column":36,"nodeType":"140","messageId":"141","endLine":112,"endColumn":38},{"ruleId":"138","severity":1,"message":"146","line":153,"column":44,"nodeType":"140","messageId":"147","endLine":153,"endColumn":46},{"ruleId":"124","severity":1,"message":"128","line":154,"column":42,"nodeType":"126","messageId":"127","endLine":154,"endColumn":44},{"ruleId":"124","severity":1,"message":"128","line":172,"column":26,"nodeType":"126","messageId":"127","endLine":172,"endColumn":28},{"ruleId":"124","severity":1,"message":"128","line":176,"column":46,"nodeType":"126","messageId":"127","endLine":176,"endColumn":48},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'Component' is defined but never used.","'IProducts' is defined but never used.","'NavBarResponsive' is defined but never used.","'handleNavBar' is defined but never used.","'Banho' is defined but never used.","'BanhoTosa' is defined but never used.","'ConsultaVeterinaria' is defined but never used.","'Link' is defined but never used.","'useHistory' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'newCount' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd"]